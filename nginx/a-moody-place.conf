# ========================================
# NGINX CONFIGURATION FOR A MOODY PLACE
# ========================================
# Production-optimized configuration for high performance
# Self-hosted Debian 12 with Plesk control panel
# Optimized for Core Web Vitals and performance targets

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=uploads:10m rate=1r/s;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=addr:10m;

# Cache zones for different content types
proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:100m max_size=1g inactive=60d use_temp_path=off;
proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=5m use_temp_path=off;

# Main server block
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name a-moody-place.com www.a-moody-place.com;
    
    # SSL Configuration (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/a-moody-place.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/a-moody-place.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/a-moody-place.com/chain.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Root directory
    root /var/www/vhosts/a-moody-place.com/httpdocs;
    index index.html;
    
    # Basic Settings
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 65s;
    send_timeout 60s;
    
    # Connection limiting
    limit_conn addr 10;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Performance Headers
    add_header X-Cache-Status $upstream_cache_status always;
    add_header Server-Timing "nginx;dur=$request_time" always;
    
    # Remove server version
    server_tokens off;
    
    # ========================================
    # STATIC ASSETS OPTIMIZATION
    # ========================================
    
    # Images - Aggressive caching
    location ~* \.(jpg|jpeg|png|webp|svg|gif|ico)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Serve WebP if available and supported
        location ~* \.(jpg|jpeg|png)$ {
            add_header Vary "Accept";
            try_files $uri$webp_suffix $uri =404;
        }
        
        # Image optimization headers
        add_header X-Content-Type-Options "nosniff";
        
        # Optional: Enable image compression
        gzip on;
        gzip_vary on;
        gzip_comp_level 6;
        gzip_types image/svg+xml;
        
        access_log off;
    }
    
    # Audio files - Long-term caching
    location ~* \.(mp3|wav|ogg|m4a|aac)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Accept-Ranges bytes;
        
        # Enable range requests for audio streaming
        add_header Content-Range $content_range;
        
        access_log off;
    }
    
    # CSS and JavaScript - Versioned caching
    location ~* \.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Compression
        gzip on;
        gzip_vary on;
        gzip_comp_level 6;
        gzip_types text/css application/javascript;
        
        # Minification (if not pre-minified)
        # Use with caution - better to pre-minify
        # sub_filter_once off;
        # sub_filter_types text/css application/javascript;
        
        access_log off;
    }
    
    # Fonts - Long-term caching with CORS
    location ~* \.(woff|woff2|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Range";
        
        access_log off;
    }
    
    # ========================================
    # APPLICATION ROUTES
    # ========================================
    
    # API routes - Rate limited and cached
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        
        # Proxy to Node.js application
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # API Response caching
        proxy_cache api_cache;
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        
        # API-specific headers
        add_header X-API-Cache-Status $upstream_cache_status;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "https://a-moody-place.com";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization";
    }
    
    # Health check endpoint
    location = /health {
        proxy_pass http://localhost:3000/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # No caching for health checks
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        expires -1;
        
        access_log off;
    }
    
    # Service Worker - Special handling
    location = /sw.js {
        proxy_pass http://localhost:3000/sw.js;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Service worker must not be cached
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Service-Worker-Allowed "/";
        expires -1;
    }
    
    # Web App Manifest
    location = /manifest.json {
        proxy_pass http://localhost:3000/manifest.json;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        
        add_header Content-Type "application/manifest+json";
        add_header Cache-Control "public, max-age=86400"; # 24 hours
    }
    
    # ========================================
    # HTML PAGES - Dynamic content
    # ========================================
    
    # Main application routes
    location / {
        limit_req zone=general burst=20 nodelay;
        
        # Try static files first, then proxy to Node.js
        try_files $uri $uri/ @node_app;
        
        # HTML caching for better performance
        add_header Cache-Control "public, max-age=300, must-revalidate"; # 5 minutes
        add_header Vary "Accept-Encoding, Accept";
        
        # Compression for HTML
        gzip on;
        gzip_vary on;
        gzip_comp_level 6;
        gzip_types text/html text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_min_length 1000;
    }
    
    # Node.js application proxy
    location @node_app {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Enable buffering for better performance
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # HTML page caching
        proxy_cache static_cache;
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        
        # Cache bypass for dynamic content
        proxy_cache_bypass $http_cache_control;
        proxy_no_cache $http_cache_control;
    }
    
    # ========================================
    # SECURITY & PERFORMANCE OPTIMIZATIONS
    # ========================================
    
    # Block access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block access to backup files
    location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Prevent access to system files
    location ~* /(package\.json|package-lock\.json|\.env|Dockerfile|docker-compose\.yml)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
        proxy_pass http://localhost:3000/404.html;
    }
    
    location = /50x.html {
        internal;
        root /var/www/html;
    }
    
    # Robots.txt
    location = /robots.txt {
        alias /var/www/vhosts/a-moody-place.com/httpdocs/robots.txt;
        add_header Cache-Control "public, max-age=86400";
        access_log off;
    }
    
    # Sitemap
    location = /sitemap.xml {
        proxy_pass http://localhost:3000/sitemap.xml;
        add_header Cache-Control "public, max-age=3600";
        add_header Content-Type "application/xml";
    }
    
    # ========================================
    # MONITORING AND LOGGING
    # ========================================
    
    # Access log with performance data
    log_format performance '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          'rt=$request_time uct="$upstream_connect_time" '
                          'uht="$upstream_header_time" urt="$upstream_response_time" '
                          'cs=$upstream_cache_status';
    
    access_log /var/log/nginx/a-moody-place.access.log performance;
    error_log /var/log/nginx/a-moody-place.error.log warn;
    
    # Performance monitoring endpoint
    location = /nginx-status {
        stub_status on;
        allow 127.0.0.1;
        allow ::1;
        deny all;
        access_log off;
    }
}

# ========================================
# HTTP TO HTTPS REDIRECT
# ========================================
server {
    listen 80;
    listen [::]:80;
    server_name a-moody-place.com www.a-moody-place.com;
    
    # Redirect all HTTP requests to HTTPS
    return 301 https://$server_name$request_uri;
}

# ========================================
# WWW TO NON-WWW REDIRECT
# ========================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.a-moody-place.com;
    
    # SSL certificates (same as main server)
    ssl_certificate /etc/letsencrypt/live/a-moody-place.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/a-moody-place.com/privkey.pem;
    
    # Redirect www to non-www
    return 301 https://a-moody-place.com$request_uri;
}

# ========================================
# GLOBAL OPTIMIZATIONS
# ========================================

# WebP support detection
map $http_accept $webp_suffix {
    "~*webp" ".webp";
    default "";
}

# Brotli compression (if module available)
# brotli on;
# brotli_comp_level 6;
# brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

# HTTP/3 support (if available)
# listen 443 quic;
# add_header Alt-Svc 'h3=":443"; ma=86400';

# ========================================
# MAINTENANCE MODE
# ========================================
# Uncomment during maintenance
# server {
#     listen 80 default_server;
#     listen [::]:80 default_server;
#     listen 443 ssl http2 default_server;
#     listen [::]:443 ssl http2 default_server;
#     
#     server_name _;
#     
#     ssl_certificate /etc/letsencrypt/live/a-moody-place.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/a-moody-place.com/privkey.pem;
#     
#     root /var/www/maintenance;
#     index maintenance.html;
#     
#     location / {
#         try_files $uri $uri/ /maintenance.html;
#     }
# }